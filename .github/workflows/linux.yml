name: Build and Test Workflow

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        cxx: [g++-14, clang++-18]
        build_type: [Debug, Release]
        sanitizer: [address, others]
        include:
          - cxx: g++-14
            install: |
              echo -e 'This is sources.list\n'
              cat /etc/apt/sources.list
              echo -e 'This is apt-mirrors.txt\n'
              cat /etc/apt/apt-mirrors.txt
              ls /etc/apt/sources.list.d/
              echo -e 'This is azure-cli\n'
              cat /etc/apt/sources.list.d/azure-cli.sources
              echo -e 'This is microsoft-prod\n'
              cat /etc/apt/sources.list.d/microsoft-prod.list
              echo -e 'This is ubuntu.sources\n'
              cat /etc/apt/sources.list.d/ubuntu.sources
              # sudo apt install g++-14
              # sudo apt install libgtest-dev libbenchmark-dev libomp-18-dev mold ninja-build libtbb-dev libmimalloc-dev libboost1.83-dev libgmp-dev libmpfr-dev libre2-dev qt6-base-dev libsfml-dev libflatbuffers-dev libavcodec-dev libavdevice-dev libavformat-dev libavfilter-dev libavutil-dev libpostproc-dev libswscale-dev libsdl2-dev
          - cxx: clang++-18
            install: |
              sudo apt install clang-18
              sudo apt install libgtest-dev libbenchmark-dev libomp-18-dev libc++-18-dev mold ninja-build libtbb-dev libmimalloc-dev libboost1.83-dev libgmp-dev libmpfr-dev libre2-dev qt6-base-dev libsfml-dev libflatbuffers-dev libavcodec-dev libavdevice-dev libavformat-dev libavfilter-dev libavutil-dev libpostproc-dev libswscale-dev libsdl2-dev
          # Add more configurations for newer compilers or other specific versions

    steps:
    - uses: actions/checkout@v2

    - name: Set timezone
      run: sudo timedatectl set-timezone 'Asia/Shanghai'

    - name: Install dependencies
      run: |
        sudo apt update
        ${{ matrix.install }}

    - name: Configure
      env:
        CXX: ${{matrix.cxx}}
      run: |
        cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
              -Bbuild \
              -GNinja \
              -DBASIC_PROJECT_STATIC_LIBSTDCXX=ON \
              -DBASIC_PROJECT_ENABLE_STRICT_STL_CHECKS=ON \
              -DBASIC_PROJECT_ENABLE_TEST=ON \
              -DBASIC_PROJECT_ENABLE_ADDRESS_SANITIZER=${{ matrix.sanitizer == 'address' && 'ON' || 'OFF' }} \
              -DBASIC_PROJECT_ENABLE_UNDEFINED_SANITIZER=${{ matrix.sanitizer == 'others' && 'ON' || 'OFF' }} \
              -DBASIC_PROJECT_ENABLE_THREAD_SANITIZER=${{ matrix.sanitizer == 'others' && 'ON' || 'OFF' }} \
              -DBASIC_PROJECT_ENABLE_MOLD=ON \
              -DBASIC_PROJECT_ENABLE_GUI=ON \
              -DBASIC_PROJECT_ENABLE_AVX2=ON \
              $GITHUB_WORKSPACE

    - name: Build
      run: |
        cmake --build build --config ${{matrix.build_type}} --parallel

    - name: Test
      run: |
        ./build/bin/main_test && \
        ./build/bin/common_test

